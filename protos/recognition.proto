syntax = "proto3";

package recognition;

// Определение сообщений
message Empty {}

message Model {
  string name = 1;
  string description = 2;
}

message ModelsResponse {
  repeated Model models = 1;
}

message RecognitionConfig {
  string model = 1;
  string file_name = 2;
  bool enable_automatic_punctuation = 3;
  uint32 sil_after_word_timeout_ms = 4;
  uint32 sample_rate = 5;
  bool enable_answerphone_detection = 6;
  bool enable_sentiments_detection = 7;
  bool enable_age_identification = 8;
}

message StreamingRecognitionRequest {
  RecognitionConfig config = 1;
  bytes audio_content = 2;
  bool only_new = 3;
}

message StreamingRecognitionResponse {
  repeated SpeechRecognitionChunk chunks = 1;
  string session_id = 2;
  string text = 3;
  bool final = 4;
  float quality_score = 5;
  bool answerphone_detected = 6;
  SentimentsInfo sentiments_info = 7;
  float words_per_second = 8;
  string age_group = 9;
}

message SpeechRecognitionChunk {
  // Определите поля по необходимости
}

message SentimentsInfo {
  // Определите поля по необходимости
}

// Определение сервиса
service RecognitionService {
  // Метод потокового распознавания
  rpc StreamingRecognize (stream StreamingRecognitionRequest) returns (stream StreamingRecognitionResponse);
  
  // Метод получения списка поддерживаемых моделей
  rpc GetSupportedModelsInfo (Empty) returns (ModelsResponse);
}
